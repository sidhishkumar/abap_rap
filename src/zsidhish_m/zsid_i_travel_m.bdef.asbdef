managed;//implementation in class zbp_sid_i_travel_m unique;
strict ( 2 );

define behavior for ZSID_I_TRAVEL_M //alias Travel
implementation in class zcl_bp_sid_travel_m unique
persistent table zsid_db_travel
lock master
authorization master ( instance )
etag master LastChangedAt

early numbering
{
  field ( readonly ) TravelId, LastChangedAt, LastChangedBy, CreatedBy, CreatedAt;
  field ( mandatory ) AgencyId, CustomerId, BeginDate, EndDate, OverallStatus, BookingFee, CurrencyCode, TotalPrice;
  create;
  update;
  delete;
  association _Booking { create ( features : instance ); }

  action ( features : instance ) acceptTravel result [1] $self;
  action ( features : instance ) rejectTravel result [1] $self;
  factory action copyTravel [1];
  internal action reCalculateTotPrice;

  validation validate_customer on save { create; field CustomerId; }

  determination calculateTotalPrice on modify { create; field BookingFee, CurrencyCode; }

  mapping for zsid_db_travel
    {
      TravelId      = travel_id;
      AgencyId      = agency_id;
      CustomerId    = customer_id;
      BeginDate     = begin_date;
      EndDate       = end_date;
      BookingFee    = booking_fee;
      TotalPrice    = total_price;
      CurrencyCode  = currency_code;
      Description   = description;
      OverallStatus = overall_status;
      CreatedBy     = created_by;
      CreatedAt     = created_at;
      LastChangedBy = last_changed_by;
      LastChangedAt = last_changed_at;
    }
}

define behavior for ZSID_I_BOOKING_M //alias <alias_name>
implementation in class zcl_bp_sid_booking_m unique
persistent table zsid_db_booking
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
early numbering
{
  update;
  delete;
  field ( readonly ) TravelId, BookingId, LastChangedAt;
  field ( mandatory ) ConnectionId, CarrierId, FlightPrice, CurrencyCode, BookingStatus;
  field ( mandatory : create, readonly : update ) BookingDate, CustomerId;
  association _Travel;
  association _BookingSupplement { create ( features : instance ); }
  determination calculateTotalPrice on modify { create; field FlightPrice, CurrencyCode; }
  mapping for zsid_db_booking corresponding
    {
      TravelId      = travel_id;
      BookingId     = booking_id;
      BookingDate   = booking_date;
      CustomerId    = customer_id;
      CarrierId     = carrier_id;
      ConnectionId  = connection_id;
      FlightDate    = flight_date;
      FlightPrice   = flight_price;
      CurrencyCode  = currency_code;
      BookingStatus = booking_status;
      LastChangedAt = last_changed_at;
    }
}

define behavior for ZSID_I_BSUPPL_M //alias <alias_name>
implementation in class zcl_bp_sid_bsuppl_m unique
persistent table zsid_db_bsuppl
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
early numbering
{
  update;
  delete;
  field ( readonly ) TravelId, BookingId, BookingSupplementId, LastChangedAt;
  field ( mandatory ) SupplementId, Price, CurrencyCode;

  association _Travel;
  association _Booking;
  determination calculateTotalPrice on modify { create; field Price, CurrencyCode; }
  mapping for zsid_db_bsuppl corresponding
    {
      TravelId            = travel_id;
      BookingId           = booking_id;
      BookingSupplementId = booking_supplement_id;
      SupplementId        = supplement_id;
      Price               = price;
      CurrencyCode        = currency_code;
      LastChangedAt       = last_changed_at;
    }


}